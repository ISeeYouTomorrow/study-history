1.nginx四层负载均衡即是基于IP和端口的的负载均衡；七层就是基于URL等应用层信息的负载均衡。同理，还有基于MAC地址的二层负载均衡和基于IP地址的三层负载均衡。
    二层负载均衡会通过一个虚拟MAC地址接收请求，然后再分配到真实的MAC地址；
    三层负载均衡会通过一个虚拟IP地址接收请求，然后再分配到真实的IP地址；
    四层通过虚拟IP+端口接收请求，然后再分配到真实的服务器；
    七层通过虚拟的URL或主机名接收请求，然后再分配到真实的服务器.

2 负载均衡器通常称为四层交换机或七层交换机。
    四层交换机主要分析IP层及TCP/UDP层，实现四层流量负载均衡。
    七层交换机除了支持四层负载均衡以外，还有分析应用层的信息，如HTTP协议URI或Cookie信息。
    负载均衡分为L4 switch（四层交换），即在OSI第4层工作，就是TCP层啦。此种Load Balance不理解应用协议（如HTTP/FTP/MySQL等等）。例子：LVS，F5。
    另一种叫做L7 switch（七层交换），OSI的最高层，应用层。此时，该Load Balancer能理解应用协议。例子： haproxy，MySQL Proxy。
    注意：上面的很多Load Balancer既可以做四层交换，也可以做七层交换。

    应用层         与其它计算机进行通讯的一个应用，它是对应应用程序的通信服务的。例如，一个没有通信功能的字处理程序就不能执行通信的代码，
                      从事字处理工作的程序员也不关心OSI的第7层。但是，如果添加了一个传输文件的选项，那么字处理器的程序就需要实现OSI的第7层。示例：TELNET，HTTP，FTP，NFS，SMTP等。
    表示层         这一层的主要功能是定义数据格式及加密。例如，FTP允许你选择以二进制或ASCII格式传输。如果选择二进制，那么发送方和接收方不改变文件的内容。

                  如果选择ASCII格式，发送方将把文本从发送方的字符集转换成标准的ASCII后发送数据。在接收方将标准的ASCII转换成接收方计算机的字符集。示例：加密，ASCII等。
    会话层         它定义了如何开始、控制和结束一个会话，包括对多个双向消息的控制和管理，以便在只完成连续消息的一部分时可以通知应用，从而使表示层看到的数据是连续的，在某些情况下，如果表示层收到了所有的数据，则用数据代表表示层。示例：RPC，SQL等。

    传输层         传输层的功能包括是否选择差错恢复协议，以及在同一主机上对不同应用的数据流的输入进行复用，还有对接收到的顺序不对的数据包进行重新排序功能。如TCP/UDP。

    网络层         网络层通过对端到端的包传输进行定义，能够标识所有节点的逻辑地址，还定义了路由的实现方式和学习方式。如IP，IPX。

    数据链路层      定义单个链路上如何传输数据。这些协议与被讨论的介质有关。如ATM，FDDI等。

    物理层         规范传输介质的特性，比如Rj45，802.3协议。











