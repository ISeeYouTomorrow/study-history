1.泛型-参数化类型，泛型就是在定义类/接口/方法时，不局限指定某一种特定类型，而让类/接口/方法的调用者来决定具体使用哪一种类型的参数。
2.使用场景：
    1）约束对象类型的场景：定义边界(T extends )(T super )的地方。
    2）用户希望返回自定义类型的返回值场景，比如Json转javabean。
    3) 在反射的应用中，也会使用泛型,如Class<T>
3.泛型的PECS原则，the producing list 使用 <? extends T>,简称PE；the counsumer list 使用 <? super T>,简称CS：
    1）只用于读功能时，泛型结构使用<? extends T>
    2)只用于写功能时，泛型结构使用<? super T>
    3)如果读写都满足，直接使用<T>
    4)如果操作与泛型无关，使用<?>
